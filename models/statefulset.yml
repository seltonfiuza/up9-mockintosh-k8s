apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: up9-mockintosh-test
spec:
  serviceName: "mockintosh"
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: up9-mockintosh-test
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: up9-mockintosh-test
    spec:
      initContainers:
        - name: up9-load-files
          image: kubeless/unzip:latest
          args:
            - |
              echo 'Waiting up9 contracts zip file in /config...'
              while [ ! -f /config/up9-contracts.zip ]; do
                sleep 2
              done
              if [ ! -f "/config/mockintosh.yml" ] || [ ! "$(ls -A '/config/mock-data')" ]; then  
                unzip -n /config/up9-contracts.zip -d /tmp
                mv /tmp/mocks/mockintosh.yml \
                /tmp/mocks/target_services_mocks.json \
                tmp/mocks/mock-data \
                /config
              fi
          command:
            - "/bin/sh"
            - -c
          volumeMounts:
          - mountPath: /config
            name: up9-mockintosh
      containers:
      - args:
        - cd /config && mockintosh mockintosh.yml
        command:
        - /bin/sh
        - -c
        image: testrio/mockintosh:latest
        imagePullPolicy: Always
        name: mockintosh
        ports:
        - containerPort: 8000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: up9-mockintosh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: up9-mockintosh
          persistentVolumeClaim:
            claimName: up9-mockintosh-test