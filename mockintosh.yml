# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://carts.sock-shop
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___carts.sock-shop-spec.json'
  endpoints:
  - path: /carts/{{customerId}}/merge
    response:
      status: 202
  - path: /carts/{{customerId}}
    response:
      status: 202
    method: delete
  - path: /carts/{{customerId}}/items
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "604bfd40245db100063d0c68",
         "itemId": "{{request.body}}",
         "quantity": 1,
         "unitPrice": {{random.float 7.99 99.99 2}}
        }
    method: post
  - path: /carts/{{customerId}}/items
    response:
      headers:
        Content-Type: application/json
      body: '[]'
- name: http://catalogue.sock-shop
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___catalogue.sock-shop-spec.json'
  endpoints:
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_1.json'
  - path: /catalogue/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_2.json'
- name: http://front-end.sock-shop
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___front-end.sock-shop-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_11.html'
      useTemplating: false
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_12.json'
  - path: /category.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_13.html'
      useTemplating: false
  - path: /detail.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_14.html'
      useTemplating: false
  - path: /login
    response:
      headers:
        Content-Type: text/html
      body: Cookie is set
      useTemplating: false
  - path: /basket.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_16.html'
      useTemplating: false
  - path: /cart
    response:
      status: 202
    method: delete
  - path: /cart
    response:
      status: 201
    method: post
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_19.json'
    method: post
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_26.html'
      useTemplating: false
- name: http://orders.sock-shop
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___orders.sock-shop-spec.json'
  endpoints:
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_10.json'
    method: post
- name: http://payment.sock-shop
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___payment.sock-shop-spec.json'
  endpoints:
  - path: /paymentAuth
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "authorised": true,
         "message": "Payment authorised"
        }
      useTemplating: false
    method: post
- name: http://shipping.sock-shop
  port: 8006
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___shipping.sock-shop-spec.json'
  endpoints:
  - path: /shipping
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "{{request.body}}",
         "name": "{{request.body}}"
        }
    method: post
- name: http://user.sock-shop
  port: 8007
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___user.sock-shop-spec.json'
  endpoints:
  - path: /login
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_3.json'
      useTemplating: false
  - path: /customers/{{customerId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_4.json'
  - path: /customers/{{customerId}}/addresses
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_5.json'
      useTemplating: false
  - path: /customers/{{customerId}}/cards
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_6.json'
      useTemplating: false
  - path: /addresses/{{addresseId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_20.json'
  - path: /cards/{{cardId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_21.json'
