# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://carts.sock-shop
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___carts.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"carts","status":"OK","date":"2021-03-03T19:36:32.558Z"},{"service":"carts-db","status":"OK","date":"2021-03-03T19:36:32.558Z"}]}'
      useTemplating: false
  - path: /carts/{{customerId}}/items
    response:
      headers:
        Content-Type: application/json
      body: '[]'
  - path: /carts/{{customerId}}
    response:
      status: 202
    method: delete
  - path: /carts/{{customerId}}/items
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "603fe54d612db100079f9196",
         "itemId": "{{request.body}}",
         "quantity": 1,
         "unitPrice": {{random.float 7.99 99.99 2}}
        }
    method: post
  - path: /carts/{{customerId}}/merge
    response:
      status: 202
- name: http://catalogue.sock-shop
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___catalogue.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"catalogue","status":"OK","time":"2021-03-03 19:35:56.779479411 +0000 UTC"},{"service":"catalogue-db","status":"OK","time":"2021-03-03 19:35:56.779617924 +0000 UTC"}]}'
      useTemplating: false
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_19.json'
  - path: /catalogue/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "{{request.path.[2]}}",
         "name": "Classic",
         "description": "Keep it simple.",
         "imageUrl": [
          "/catalogue/images/classic.jpg",
          "/catalogue/images/classic2.jpg"
         ],
         "price": 12,
         "count": {{random.int 1 820}},
         "tag": [
          "brown",
          "green"
         ]
        }
  - path: /catalogue/size
    response:
      headers:
        Content-Type: application/json
      body: '{"size":9,"err":null}'
      useTemplating: false
  - path: /tags
    response:
      headers:
        Content-Type: application/json
      body: '{"tags":["brown","geek","formal","blue","skin","red","action","sport","black","magic","green"],"err":null}'
      useTemplating: false
- name: http://front-end.sock-shop
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___front-end.sock-shop-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_1.html'
      useTemplating: false
  - path: /basket.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_2.html'
      useTemplating: false
  - path: /cart
    response:
      status: 201
    method: post
  - path: /cart
    response:
      status: 202
    method: delete
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_5.json'
  - path: /category.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_6.html'
      useTemplating: false
  - path: /detail.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_7.html'
      useTemplating: false
  - path: /login
    response:
      headers:
        Content-Type: text/html
      body: Cookie is set
      useTemplating: false
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_39.json'
    method: post
- name: http://orders.sock-shop
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___orders.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"orders","status":"OK","date":"2021-03-03T19:36:32.060Z"},{"service":"orders-db","status":"OK","date":"2021-03-03T19:36:32.060Z"}]}'
      useTemplating: false
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_44.json'
    method: post
- name: http://payment.sock-shop
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___payment.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"payment","status":"OK","time":"2021-03-03 19:36:31.063350815 +0000 UTC"}]}'
      useTemplating: false
  - path: /paymentAuth
    response:
      headers:
        Content-Type: application/json
      body: '{"authorised":true,"message":"Payment authorised"}'
      useTemplating: false
    method: post
- name: http://queue-master.sock-shop
  port: 8006
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___queue-master.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"queue-master","status":"OK","date":"2021-03-03T19:48:18.534Z"},{"service":"queue-master-rabbitmq","status":"OK","date":"2021-03-03T19:48:18.534Z"}]}'
      useTemplating: false
- name: http://shipping.sock-shop
  port: 8007
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___shipping.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"shipping-rabbitmq","status":"OK","date":"2021-03-03T19:48:05.723Z"},{"service":"shipping","status":"OK","date":"2021-03-03T19:48:05.723Z"}]}'
      useTemplating: false
  - path: /shipping
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "{{request.body}}",
         "name": "{{request.body}}"
        }
    method: post
- name: http://user.sock-shop
  port: 8008
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___user.sock-shop-spec.json'
  endpoints:
  - path: /health
    response:
      headers:
        Content-Type: application/json
      body: '{"health":[{"service":"user","status":"OK","time":"2021-03-03 19:36:19.971676981 +0000 UTC"},{"service":"user-db","status":"OK","time":"2021-03-03 19:36:19.97171752 +0000 UTC"}]}'
      useTemplating: false
  - path: /addresses/{{addresseId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_14.json'
  - path: /cards/{{cardId}}
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "longNum": "5544154011345918",
         "expires": "08/19",
         "ccv": "958",
         "id": "{{request.path.[2]}}",
         "_links": {
          "card": {
           "href": "http://user/cards/57a98d98e4b00679b4a830b1"
          },
          "self": {
           "href": "http://user/cards/57a98d98e4b00679b4a830b1"
          }
         }
        }
  - path: /customers/{{customerId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_16.json'
  - path: /customers/{{customerId}}/addresses
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_24.json'
      useTemplating: false
  - path: /customers/{{customerId}}/cards
    response:
      headers:
        Content-Type: application/json
      body: '{"_embedded":{"card":[{"longNum":"5544154011345918","expires":"08/19","ccv":"958","id":"57a98d98e4b00679b4a830b1","_links":{"card":{"href":"http://user/cards/57a98d98e4b00679b4a830b1"},"self":{"href":"http://user/cards/57a98d98e4b00679b4a830b1"}}}]}}'
      useTemplating: false
  - path: /login
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_26.json'
      useTemplating: false
  - path: /register
    response:
      headers:
        Content-Type: application/json
      body: '{"id":"603fe53420e32d0001e4db51"}'
      useTemplating: false
    method: post